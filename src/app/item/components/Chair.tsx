// @ts-nocheck

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/chair.gltf 
*/

import { useGLTF, useTexture } from '@react-three/drei'
import { FC } from 'react'
import * as THREE from 'three'

import { useCustomization } from '../_store/customizationStore'

interface TextureProps {
  map?: THREE.Texture
  normalMap: THREE.Texture
  roughnessMap: THREE.Texture
  aoMap: THREE.Texture
}

export const Chair: FC = () => {
  const [material, legs, mainColor, detailColor] = useCustomization((state) => [
    state.material,
    state.legs,
    state.mainColor,
    state.detailColor,
  ])
  const { nodes, materials } = useGLTF('./models/chair.gltf')

  const leatherTextureProps: TextureProps = useTexture({
    // map: './textures/leather/Leather_008_Base Color.jpg',
    normalMap: './textures/leather/Leather_008_Normal.jpg',
    roughnessMap: './textures/leather/Leather_008_Roughness.jpg',
    aoMap: './textures/leather/Leather_008_Ambient Occlusion.jpg',
  })

  // leatherTextureProps.map.repeat.set(3, 3)
  leatherTextureProps.normalMap.repeat.set(3, 3)
  leatherTextureProps.roughnessMap.repeat.set(3, 3)
  leatherTextureProps.aoMap.repeat.set(3, 3)

  // leatherTextureProps.map.wrapS = leatherTextureProps.map.wrapT =
  //   THREE.RepeatWrapping
  leatherTextureProps.normalMap.wrapS = leatherTextureProps.normalMap.wrapT =
    THREE.RepeatWrapping
  leatherTextureProps.roughnessMap.wrapS =
    leatherTextureProps.roughnessMap.wrapT = THREE.RepeatWrapping
  leatherTextureProps.aoMap.wrapS = leatherTextureProps.aoMap.wrapT =
    THREE.RepeatWrapping

  const fabricTextureProps: TextureProps = useTexture({
    // map: './textures/fabric/Fabric_Knitted_006_basecolor.jpg',
    normalMap: './textures/fabric/Fabric_Knitted_006_normal.jpg',
    roughnessMap: './textures/fabric/Fabric_Knitted_006_roughness.jpg',
    aoMap: './textures/fabric/Fabric_Knitted_006_ambientOcclusion.jpg',
  })

  // fabricTextureProps.map.repeat.set(3, 3)
  fabricTextureProps.normalMap.repeat.set(3, 3)
  fabricTextureProps.roughnessMap.repeat.set(3, 3)
  fabricTextureProps.aoMap.repeat.set(3, 3)

  // fabricTextureProps.map.wrapS = fabricTextureProps.map.wrapT =
  //   THREE.RepeatWrapping
  fabricTextureProps.normalMap.wrapS = fabricTextureProps.normalMap.wrapT =
    THREE.RepeatWrapping
  fabricTextureProps.roughnessMap.wrapS =
    fabricTextureProps.roughnessMap.wrapT = THREE.RepeatWrapping
  leatherTextureProps.aoMap.wrapS = fabricTextureProps.aoMap.wrapT =
    THREE.RepeatWrapping

  return (
    <group dispose={null} rotation={[0, Math.PI / 5, 0]}>
      <mesh geometry={nodes.Chair.geometry} receiveShadow castShadow>
        <meshStandardMaterial
          {...(material === 'leather'
            ? leatherTextureProps
            : fabricTextureProps)}
          color={mainColor.color}
        />
      </mesh>

      <mesh
        geometry={nodes.Cushion.geometry}
        position={[0, 0.064, 0.045]}
        receiveShadow
      >
        <meshStandardMaterial
          {...fabricTextureProps}
          color={detailColor.color}
        />
      </mesh>

      <mesh
        geometry={nodes.Legs1.geometry}
        material={materials.Legs}
        visible={legs === 1}
        receiveShadow
        castShadow
      />

      <mesh
        geometry={nodes.Legs2.geometry}
        material={materials.Legs}
        visible={legs === 2}
        receiveShadow
        castShadow
      />
    </group>
  )
}

useGLTF.preload('./models/chair.gltf')
